generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  auth0Id    String       @unique @default("")
  name       String
  skierType  String?
  skierLevel String?
  picture    String?
  reviews    ReviewItem[]
  bucketList BucketList[]
}

model Mountain {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  location   String
  picture    String
  passType   String
  region     String
  reviews    ReviewItem[]
  BucketList BucketList[]
}

model ReviewPhoto {
  id       Int        @id @default(autoincrement())
  reviewId Int
  picture  String
  review   ReviewItem @relation(fields: [reviewId], references: [id], onDelete: Cascade)

  @@index([reviewId])
}

model ReviewItem {
  id         Int           @id @default(autoincrement())
  title      String        @db.VarChar(500)
  rating     Int
  authorId   Int
  mountainId Int
  createdAt  DateTime      @default(dbgenerated("CURRENT_TIMESTAMP(3)"))
  author     User          @relation(fields: [authorId], references: [id], onDelete: Cascade)
  mountain   Mountain      @relation(fields: [mountainId], references: [id])
  photos     ReviewPhoto[]
}

model BucketList {
  id         Int      @id @default(autoincrement())
  mountainId Int
  authorId   Int
  mountain   Mountain @relation(fields: [mountainId], references: [id])
  author     User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
}
